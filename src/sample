public static void main(String[] args) {
    /**This is the document that you want to read using Java.**/
    String fileName = "d\\Resume.doc";

    /**Method call to read the document (demonstrate some useage of POI)**/
    readMyDocument(fileName);

}
public static void readMyDocument(String fileName){
    POIFSFileSystem fs = null;
    try {
        fs = new POIFSFileSystem(new FileInputStream(fileName));
        HWPFDocument doc = new HWPFDocument(fs);

        /** Read the content **/
        readParagraphs(doc);

        int pageNumber=1;

        /** We will try reading the header for page 1**/
        readHeader(doc, pageNumber);

        /** Let's try reading the footer for page 1**/
        readFooter(doc, pageNumber);

        /** Read the document summary**/
        readDocumentSummary(doc);

    } catch (Exception e) {
        e.printStackTrace();
    }
}

public static void readParagraphs(HWPFDocument doc) throws Exception{
    WordExtractor we = new WordExtractor(doc);

    /**Get the total number of paragraphs**/
    String[] paragraphs = we.getParagraphText();
    System.out.println("Total Paragraphs: "+paragraphs.length);

    for (int i = 0; i < paragraphs.length; i++) {

        System.out.println("Length of paragraph "+(i +1)+": "+ paragraphs[i].length());
        System.out.println(paragraphs[i].toString());

    }

}

public static void readHeader(HWPFDocument doc, int pageNumber){
    HeaderStories headerStore = new HeaderStories( doc);
    String header = headerStore.getHeader(pageNumber);
    System.out.println("Header Is: "+header);

}

public static void readFooter(HWPFDocument doc, int pageNumber){
    HeaderStories headerStore = new HeaderStories( doc);
    String footer = headerStore.getFooter(pageNumber);
    System.out.println("Footer Is: "+footer);

}

public static void readDocumentSummary(HWPFDocument doc) {
    DocumentSummaryInformation summaryInfo=doc.getDocumentSummaryInformation();
    String category = summaryInfo.getCategory();
    String company = summaryInfo.getCompany();
    int lineCount=summaryInfo.getLineCount();
    int sectionCount=summaryInfo.getSectionCount();
    int slideCount=summaryInfo.getSlideCount();

    System.out.println("---------------------------");
    System.out.println("Category: "+category);
    System.out.println("Company: "+company);
    System.out.println("Line Count: "+lineCount);
    System.out.println("Section Count: "+sectionCount);
    System.out.println("Slide Count: "+slideCount);

}


package com.PTM;

import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.xwpf.usermodel.*;
import org.junit.Test;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Iterator;
import java.util.List;

public class ReadWord_copy {

    private String cellOne;
    private String cellTwo;
    private String cellThree;
    private String cellFour;
    public String searchString = cellOne + cellTwo + cellThree + cellFour;

    //Read table cell
    @Test
    public void readDocxTable() throws IOException, InvalidFormatException {

        FileInputStream fis = new FileInputStream("TC602 Vol 22.docx");
        XWPFDocument doc = new XWPFDocument(OPCPackage.open(fis));
        Iterator<IBodyElement> bodyElementIterator = doc.getBodyElementsIterator();
        while (bodyElementIterator.hasNext()) {

            IBodyElement element = bodyElementIterator.next();

            if ("TABLE".equalsIgnoreCase(element.getElementType().name())) {
                List<XWPFTable> tables = element.getBody().getTables();

                for (XWPFTable table : tables) {

//                    System.out.println(table.getText());
                    System.out.println("In Table and First Cell is: =================" + table.getRow(0).getCell(0).getText());
//
                    if (table.getRow(0).getCell(0).getText().equals("Tag")) {
//                        System.out.println("Table is considered++++++++++++++++++++++++++++++++");
//                        System.out.println(table.getRow(0).getCell(0).getText());
                        System.out.println(table.getText());
//                        for (XWPFTableRow row : table.getRows()) {
//
//                            System.out.println(table.getText());
//                            if (row.getCell(0).getText().isEmpty()) {
////                                System.out.println("Skip cell and continue in table");
//                                continue;
//                            }
//                            if (!row.getCell(0).getText().startsWith("0")) {
////                                System.out.println("Skip cell and continue in table");
//                                continue;
//                            }
//
//                            System.out.println("+++++++"+row.getCell(0).getText());
////                    }
//                        }
                    }

                }
            }
        }
    }
}



